local d = (import 'github.com/jsonnet-libs/docsonnet/doc-util/main.libsonnet');
{
  '#':: d.pkg(name='doppler', url='', help='The `doppler` package contains functions and utilities for setting up the provider, resources, and data\nsources of the [doppler Terraform provider](TODO) using Jsonnet.\n\nThis package is autogenerated from the [tf-libsonnet/libgenerator](https://github.com/tf-libsonnet/libgenerator)\nproject.\n'),
  provider: (import 'provider_doppler.libsonnet'),
  config: (import 'resources/config.libsonnet'),
  environment: (import 'resources/environment.libsonnet'),
  group: (import 'resources/group.libsonnet'),
  integration_aws_parameter_store: (import 'resources/integration_aws_parameter_store.libsonnet'),
  integration_aws_secrets_manager: (import 'resources/integration_aws_secrets_manager.libsonnet'),
  integration_terraform_cloud: (import 'resources/integration_terraform_cloud.libsonnet'),
  project: (import 'resources/project.libsonnet'),
  project_member_group: (import 'resources/project_member_group.libsonnet'),
  project_member_service_account: (import 'resources/project_member_service_account.libsonnet'),
  secret: (import 'resources/secret.libsonnet'),
  secrets_sync_aws_parameter_store: (import 'resources/secrets_sync_aws_parameter_store.libsonnet'),
  secrets_sync_aws_secrets_manager: (import 'resources/secrets_sync_aws_secrets_manager.libsonnet'),
  secrets_sync_terraform_cloud: (import 'resources/secrets_sync_terraform_cloud.libsonnet'),
  service_account: (import 'resources/service_account.libsonnet'),
  service_token: (import 'resources/service_token.libsonnet'),
  data: (import 'data/main.libsonnet'),
}
